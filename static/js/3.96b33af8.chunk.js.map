{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","onClick","alert","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","contentImage","descriptionBlock","photos","large","fullName","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","lookingForAJob","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","history","push","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.96b33af8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2Io2G\",\"contentImage\":\"ProfileInfo_contentImage__2RDab\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n\n  return (\n    <div className={s.item}>\n      <img src='https://avatarfiles.alphacoders.com/220/220432.jpg' alt=''/>\n        { props.message }\n      <div>\n        <button onClick={ () => { alert('samuraijs.com') }}>Like</button>{ props.likesCount } \n      </div>\n    </div>\n  );\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name='newPostText'\n          component={Textarea}\n          placeholder={'Post message'}\n          validate={[required, maxLength10]} />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  );\n}\n\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\n\nlet MyPosts = React.memo((props) => {\n  console.log('RENDER: My Posts');\n\n  let postsElements = props.posts.map(p => {\n    return <Post message={p.message} likesCount={p.likesCount} />\n  });\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>my posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>\n        {postsElements}\n      </div>\n    </div>\n  );\n});\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status]);\n\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  return (\n    <div>\n      { !editMode &&\n        <div>\n          <span\n            onDoubleClick={activateEditMode}>\n            {props.status || '---'}\n          </span>\n        </div>\n      }\n      { editMode &&\n        <div>\n          <div>\n            <input\n              autoFocus={true}\n              onBlur={deactivateEditMode}\n              onChange={onStatusChange}\n              value={status} />\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n  if (!profile) {\n    return <Preloader />\n  }\n  return (\n    <div>\n      <div>\n        <img\n          className={s.contentImage}\n          src='https://media.timeout.com/images/100541963/image.jpg'\n          alt='' />\n        <ProfileStatusWithHooks \n          status={status} \n          updateStatus={updateStatus} />\n      </div>\n      <div className={s.descriptionBlock}>\n        <img src={profile.photos.large} alt='' />\n        <div>\n          {profile.fullName}\n        </div>\n        <div>\n          {profile.aboutMe}\n        </div>\n        <div>\n          {profile.contacts.facebook}\n        </div>\n        <div>\n          {profile.contacts.github}\n        </div>\n        <div>\n          {profile.contacts.instagram}\n        </div>\n        <div>\n          {profile.contacts.mainLink}\n        </div>\n        <div>\n          {profile.contacts.twitter}\n        </div>\n        <div>\n          {profile.contacts.vk}\n        </div>\n        <div>\n          {profile.contacts.website}\n        </div>\n        <div>\n          {profile.contacts.youtube}\n        </div>\n        <div>\n          {\n            profile.lookingForAJob\n              ? <div>{profile.lookingForAJobDescription}</div>\n              : <div>Currently, not looking for a job</div>\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { \n  getUserProfile, \n  getStatus, \n  updateStatus \n} from '../../redux/profile-reducer'\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push('/login');\n        return;\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return (\n      <Profile {...this.props} \n        profile={this.props.profile} \n        status={this.props.status} \n        updateStatus={this.props.updateStatus} />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth \n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps, \n    {\n      getUserProfile,\n      getStatus,\n      updateStatus\n    }\n  ),\n  withRouter//,\n  //withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}