{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStatToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,iICI7MC,EAA4B,SAACC,GAC/B,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,mCCQRE,EAXI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAIN,EAAb,SACGD,EAAMQ,UCEAC,EARC,SAACT,GACf,OACE,qBAAKG,UAAWC,IAAEM,QAAlB,SACGV,EAAMU,W,iCCDPC,EAAcC,YAAiB,IAmBxBC,EAAsBC,YACjC,CACEC,KAAM,wBAFyBD,EAjBZ,SAACd,GACtB,OACE,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,yBAEhB,8BACE,kDCUOC,EAtBC,SAACxB,GACf,IAAIJ,EAAQI,EAAMyB,YACdC,EAAkB9B,EAAM+B,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMN,GAAI2B,EAAE3B,IAAS2B,EAAE3B,OACpF4B,EAAmBlC,EAAMmC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE9B,OAMnF,OACE,sBAAKC,UAAWC,IAAEuB,QAAlB,UACE,qBAAKxB,UAAWC,IAAE6B,YAAlB,SACGP,IAEH,sBAAKvB,UAAWC,IAAE2B,SAAlB,UACE,8BAAMD,IACN,cAACjB,EAAD,CAAqBG,SAXP,SAACkB,GACnBlC,EAAMmC,YAAYD,EAAOE,0BCQdC,sBACbC,aAfoB,SAAC1C,GACrB,MAAO,CACL6B,YAAa7B,EAAM6B,gBAIE,SAACc,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,ULJF,SAACK,GAAe,IACxCC,EADuC,uKAIzC,OAAKC,KAAK3C,MAAMH,OAGT,cAAC4C,EAAD,eAAeE,KAAK3C,QAFlB,cAAC,IAAD,CAAUO,GAAG,eALmB,GACbqC,IAAMH,WAYtC,OAFqCH,YAAQ3C,EAAR2C,CAAmCI,KKF3DL,CAGbb","file":"static/js/4.1adeeb6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nlet mapStatToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render () {\n      //alert(this.props.isAuth);\n      if (!this.props.isAuth) {\n        return <Redirect to='/login' />\n      }\n      return <Component {...this.props} />\n    }\n  }\n\n  let ConnectedAuthRedirectComponent = connect(mapStatToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from '../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={s.dialog + ' ' + s.active}>\n      <NavLink to={path}>\n        {props.name}\n      </NavLink>\n    </div>\n  );\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from '../Dialogs.module.css';\n\nconst Message = (props) => {\n  return (\n    <div className={s.message}>\n      {props.message}\n    </div>\n  );\n}\n\nexport default Message;","import {React} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          validate={[required, maxLength50]}\n          name='newMessageBody'\n          placeholder='Enter your message' />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n}\n\nexport const AddMessageFormRedux = reduxForm(\n  {\n    form: 'dialogAddMessageForm'\n  }\n)(AddMessageForm);","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport s from './Dialogs.module.css';\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageForm';\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id} />);\n  let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>\n        {dialogsElements}\n      </div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}